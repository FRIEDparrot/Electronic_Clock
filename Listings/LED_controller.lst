C51 COMPILER V9.60.7.0   LED_CONTROLLER                                                    12/23/2023 15:53:47 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LED_CONTROLLER
OBJECT MODULE PLACED IN .\Objects\LED_controller.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE LED_function\LED_controller.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\public;.\L
                    -ED_function;.\Timer_function) DEBUG OBJECTEXTEND PRINT(.\Listings\LED_controller.lst) TABS(2) OBJECT(.\Objects\LED_contr
                    -oller.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "LED_controller.h" 
   3          #define LED_COL_PORT P0
   4          
   5          u8 gsm_code[17] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 
   6                      0x7f, 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71}; 
   7          
   8          u8 week_code[7] = {0x7f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d}; 
   9          
  10          void LED_SelfCheck(){
  11   1          u8 a[8];
  12   1          int i, j, x;
  13   1          for (i = 0; i <= 9; i++){
  14   2              for (j = 0; j < 8 ; j++) a[j] = i;
  15   2              for (x = 0; x < 70; x++){
  16   3                  LED_ShowNumber(a);
  17   3                  Delay(1);
  18   3              }
  19   2          }
  20   1      }
  21          
  22          // use 74HC138 decoder for each LED light 
  23          void LED_SET(u8 num){
  24   1        u8 n = num;
  25   1        P2_2 = n%2; n/=2;
  26   1        P2_3 = n%2; n/=2;
  27   1        P2_4 = n%2; n/=2;
  28   1      }
  29          
  30          // clear the Controlling PORT
  31          void LED_CLEAR(){
  32   1          P0 = 0x00; 
  33   1      }
  34          
  35          void LED_ShowNumber(u8 Arr[8]){
  36   1          u8 i; 
  37   1          for (i = 0; i < 8; i++){
  38   2              LED_SET(7-i); LED_COL_PORT = gsm_code[Arr[i]]; Delay(1); LED_CLEAR(); Delay(1);
  39   2          }
  40   1      }
  41          
  42          // use state to chose which to ignite for a period 
  43          void LED_ShowDateTime(u8 hour, u8 min, u8 sec, u8 day, u8 Setstate){
  44   1          if (Setstate!=1) {
  45   2              LED_SET(7); LED_COL_PORT = gsm_code[hour/10]; Delay(1); LED_CLEAR(); Delay(1);
  46   2              LED_SET(6); LED_COL_PORT = gsm_code[hour%10]| 0x80; Delay(1); LED_CLEAR(); Delay(1);
  47   2          }
  48   1          if (Setstate!=2) {
  49   2              LED_SET(5); LED_COL_PORT = gsm_code[min/10]; Delay(1); LED_CLEAR(); Delay(1);
  50   2              LED_SET(4); LED_COL_PORT = gsm_code[min%10]| 0x80; Delay(1); LED_CLEAR(); Delay(1);
  51   2          }
  52   1          if (Setstate!=3) {
  53   2              LED_SET(3); LED_COL_PORT = gsm_code[sec/10]; Delay(1); LED_CLEAR(); Delay(1);
C51 COMPILER V9.60.7.0   LED_CONTROLLER                                                    12/23/2023 15:53:47 PAGE 2   

  54   2              LED_SET(2); LED_COL_PORT = gsm_code[sec%10]; Delay(1); LED_CLEAR(); Delay(1);
  55   2          }
  56   1          if (Setstate!=4 && day >= 0 && day < 7) { // if day < 0, don't show it 
  57   2              LED_SET(0); LED_COL_PORT = week_code[day]; Delay(1); LED_CLEAR(); Delay(1);
  58   2          }
  59   1      }
  60          
  61          void LED_ShowExactTime(u8 hour, u8 min, u8 sec, u8 xms){
  62   1          LED_SET(7); LED_COL_PORT = gsm_code[hour/10]; Delay(1); LED_CLEAR(); Delay(1);
  63   1          LED_SET(6); LED_COL_PORT = gsm_code[hour%10]| 0x80; Delay(1); LED_CLEAR(); Delay(1);
  64   1          LED_SET(5); LED_COL_PORT = gsm_code[min/10]; Delay(1); LED_CLEAR(); Delay(1);
  65   1          LED_SET(4); LED_COL_PORT = gsm_code[min%10]| 0x80; Delay(1); LED_CLEAR(); Delay(1);
  66   1          LED_SET(3); LED_COL_PORT = gsm_code[sec/10]; Delay(1); LED_CLEAR(); Delay(1);
  67   1          LED_SET(2); LED_COL_PORT = gsm_code[sec%10]| 0x80; Delay(1); LED_CLEAR(); Delay(1);
  68   1          LED_SET(1); LED_COL_PORT = gsm_code[xms/10]; Delay(1); LED_CLEAR(); Delay(1);
  69   1          LED_SET(0); LED_COL_PORT = gsm_code[xms%10]; Delay(1); LED_CLEAR(); Delay(1);
  70   1      }
  71          
  72          // show any random chararacter by define P2
  73          void LED_ShowChar(u8 loc, u8 ch){
  74   1          LED_SET(7 - loc); LED_COL_PORT = ch; Delay(1); LED_CLEAR(); Delay(1);
  75   1      }
  76          /*
  77          state 0: all light; 
  78          state 1: set Hour;  state 2: set Minute; state 3: set Second; state 4: set day;
  79          which will not render this in the LED port. 
  80          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    780    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
